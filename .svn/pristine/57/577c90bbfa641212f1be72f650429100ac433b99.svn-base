package models

import(
	//"github.com/astaxie/beego/validation"
	//"log"
	"github.com/astaxie/beego/orm"
	_"app/common/conndatabase"
)

type BookInfo struct {
	Bookid       int64      `json:"bookid" valid:"Required" orm:"pk;size(20);column(bookid);"`
	Bookname     string     `json:"bookname" valid:"Required"`
	Author       string	`json:"auhtor" valid:"Required"`
	ImageUrl     string	`json:"image_url"`
	Imagehead    string	`json:"imagehead"`
	Imageback    string	`json:"imageback"`
	Isbn         string	`json:"isbn" valid:"Required"`
	Depreciation uint8	`json:"depreciation"`
	Price        uint16	`json:"price" valid:"Numeric"`
	Describe     string	`json:"describe"`
	State        uint8	`json:"state" valid:"Required;Range(0, 1)"`
}

/*func (b BookInfo) InsertValidation() error {
	valid := validation.Validation{}
	valid.Required(b.Bookname,  "Bookid").Message("用户编号不能为空！")
	valid.Required(b.Author, "nickname").Message("用户昵称不能为空！")
	valid.MaxSize(a.Nickname,50,"nickname").Message("用户昵称不大于50个字符！")
	valid.MinSize(a.Nickname,5,"nickname").Message("用户昵称不小于5个字符！")
	//valid.Range(a.Age, 0, 100, "age").Message("年龄不符合范围！")
	if valid.HasErrors() {
		for _, err := range valid.Errors {
			log.Println(err.Key, err.Message)
			return err
		}
	}
	return nil
}*/

func init()  {
	orm.RegisterModelWithPrefix("lb_",new(BookInfo))
}

func (this *BookInfo) GetBookinfo (bookid int64) BookInfo  {

	return *this
}
