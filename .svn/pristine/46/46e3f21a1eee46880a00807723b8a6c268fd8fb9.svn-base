package routers

import (
	"github.com/astaxie/beego"
	"app/controllers"
	"github.com/astaxie/beego/context"
	"app/common"
	"app/controllers/api"
	//"fmt"
)

func init() {
	//后台路由
	beego.Router("/admin", &controllers.AdminController{}, "*:Index")
	beego.Router("/admin/index", &controllers.AdminController{}, "*:Index")
	beego.Router("/admin/signup", &controllers.AdminController{}, "*:Signup")
	beego.Router("/admin/login", &controllers.AdminController{}, "*:Login")
	beego.Router("/admin/logout", &controllers.AdminController{}, "*:Logout")

	//前台路由
	beego.Router("/", &controllers.SiteController{}, "*:Index")
	beego.Router("/site/index", &controllers.SiteController{}, "*:Index")
	beego.Router("/site/signup", &controllers.SiteController{}, "*:Signup")
	beego.Router("/site/login", &controllers.SiteController{}, "*:Login")
	beego.Router("/site/logout", &controllers.SiteController{}, "*:Logout")

	//api路由
	beego.InsertFilter("/api/*",beego.BeforeRouter,FilterToken)

	beego.Router("/api/index", &api.ApiController{}, "*:Index")
	//beego.Router("/api/redis", &controllers.ApiController{}, "*:Redis")
	beego.Router("/user/login", &api.ApiController{}, "*:Login")
	beego.Router("/api/test", &api.ApiController{}, "*:Test")
	beego.Router("/user/stoprunning/?:type", &api.ApiController{}, "*:StopRunning")
}

var FilterToken = func(ctx *context.Context) {
	auth := ctx.Request.Header.Get("Authorization")
	if 0 == len(auth){
		ctx.Redirect(302,"/user/stoprunning/1")

	}
	isaccess := user_encode.VerifyToken(auth)
	if true != isaccess{
		ctx.Redirect(302,"/user/stoprunning/2")
	}
}
