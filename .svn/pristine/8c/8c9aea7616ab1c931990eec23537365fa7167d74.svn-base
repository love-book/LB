package controllers

import (
	"github.com/astaxie/beego"
	"app/models"
	"fmt"
	"strings"
	"app/common"
)

type ApiController struct {
	apiBaseController
}

func (this *ApiController) Prepare() {
	//关闭xsrf校验
	this.EnableXSRF = false
	this.EnableRender =false
}
func (this *ApiController) Index() {
	token  :=  beego.AppConfig.String("token") // 微信公众平台的Token
	appid  :=  beego.AppConfig.String("appid")  // 微信公众平台的AppID
	secret :=  beego.AppConfig.String("secret")  // 微信公众平台的AppSecret
	// 仅被动响应消息时可不填写appid、secret
	// 仅主动发送消息时可不填写token
	mp := models.New(token, appid, secret)
	// 检查请求是否有效
	// 仅主动发送消息时不用检查
	if !mp.Request.IsValid(this.Ctx.ResponseWriter, this.Ctx.Request) {
		return
	}
	fmt.Println("CreateContainer,RequestBody", string(this.Ctx.Input.RequestBody))
	// 文本消息
	if mp.Request.MsgType == models.MsgTypeText {
		// 回复消息
		mp.ReplyTextMsg(this.Ctx.ResponseWriter, "Hello, 世界")
	}
	// 图片消息
	if mp.Request.MsgType == models.MsgTypeImage {
		// 回复消息
		mp.ReplyTextMsg(this.Ctx.ResponseWriter, "图片消息")
	}

	//事件
	if mp.Request.MsgType == models.MsgTypeEvent{
		fmt.Print(mp.Request.Event)
		// 地理位置事件
		if mp.Request.Event == models.MsgTypeLocation {

		}
		// 关注事件
		if mp.Request.Event == models.EventSubscribe {
			mp.ReplyTextMsg(this.Ctx.ResponseWriter, "感谢关注恋书!")
		}
		// 取关事件
		if mp.Request.Event == models.EventSubscribe {

		}

		// 扫码提示事件scancode_waitmsg
		if mp.Request.Event == models.EventScanCodeWaitMsg {
			if(mp.Request.ScanCodeInfo.ScanType == models.ScanTypeBarcode){
				scanRes := strings.Split(mp.Request.ScanCodeInfo.ScanResult,",")
				res ,_:= models.GetBarcodeInfo(scanRes[1])
				if(res.Code != "10000"){
					mp.ReplyTextMsg(this.Ctx.ResponseWriter, res.Msg)
				}
				goodsName := res.Result.Showapi_res_body.GoodsName
				fmt.Printf(goodsName)
				if(goodsName == ""){
					mp.ReplyTextMsg(this.Ctx.ResponseWriter, "书名:"+goodsName)
				}else{
					mp.ReplyTextMsg(this.Ctx.ResponseWriter, "书名:"+goodsName)
				}
			}else {
				mp.ReplyTextMsg(this.Ctx.ResponseWriter, "暂不支持非条形码扫码!")
			}

		}


	}
}

func (this *ApiController) Test()  {
	s,_:= common.GetAccessToken("1203939180183","os01")
	common.VerifyAccessToken(s,"1203939180183","os01")

}